generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  GUEST
  USER
  AUTHOR
  MODERATOR
  ADMIN
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  email    String   @unique
  password String
  role     Role     @default(USER)
  name     String?
  bio      String?
  image    String?
  challengePhrase String?
  createdAt DateTime @default(now())
  comments Comment[]
  posts    Post[]
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  slug       String    @unique
  content    Json
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  author     User?     @relation(fields: [authorId], references: [id])
  authorId   Int?
  tags       Tag[]     @relation("PostTags")
  comments   Comment[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  slug  String @unique
  posts Post[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  slug  String @unique
  posts Post[] @relation("PostTags")
}

enum CommentStatus {
  PENDING
  APPROVED
  REJECTED
}

model Comment {
  id        Int            @id @default(autoincrement())
  name      String
  message   String
  createdAt DateTime       @default(now())
  status    CommentStatus  @default(PENDING)
  post      Post           @relation(fields: [postId], references: [id])
  postId    Int
  user      User?          @relation(fields: [userId], references: [id])
  userId    Int?
}

model Setting {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String
}
